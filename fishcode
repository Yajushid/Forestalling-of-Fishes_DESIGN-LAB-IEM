from multiprocessing import Process, Pipe

class sensor_module:

    def __init__(self, water_level, mac_address):

        self.water_level = water_level
        self.mac_address = mac_address

    def get_address(self):
        return self.mac_address

    def raise_alarm(conn, waterlevel, threshold):
        if (waterlevel > threshold):
            conn.send(1)
        elif (waterlevel < 0):
            conn.send(-1)
        elif (waterlevel <= threshold):
            conn.send(0)
        conn.close()

    def update_status(conn, alarm_type):
        if (alarm_type=='high'):
            conn.send('high')

        elif (alarm_type=='low'):
            conn.send('low')
        conn.close()

    def control_net(conn, instruction):
        if(instruction == 'raise net'):
            conn.send(1)
        elif(instruction == 'lower net'):
            conn.send(0)
        conn.close()



class main_control_center():
    def _init_(self):
        self.id = None

    def get_water_sensor_data(self, water_level, mac_address):
        self.water_sensor_address= mac_address
        self.water_sensor_data = water_level

    def configure_threshold(conn):
        conn.send(300)
        conn.close()

    def send_signal(conn,mac_address):
        if(mac_address!="null"):
            conn.send(1)
        else:
            conn.send(0)
        conn.close()

    def send_instruction(conn, value):
        if (value == 1):
            conn.send('raise net')
        elif (value == 0):
            conn.send('lower net')
        conn.close()

    def receive_status(conn, status):
        if(status=='high'):
            conn.send(1)
        elif(status=='low'):
            conn.send(0)
        conn.close()

if __name__ == '__main__':
    main_conn, sensor_conn = Pipe()
    alarm_type = ''
    waterlevel = int(input("Enter water level from sensor : "))

    sensor_object= sensor_module(waterlevel, "192.0.0.1")
    mac_address= sensor_object.get_address()
    print("mac : ", mac_address)

    p = Process(target=main_control_center.send_signal, args=(sensor_conn,mac_address))
    p.start()
    signal = main_conn.recv()
    if(signal==1):
        print("Connection is established")
    else:
        print("Connection is not established")
    p.join()
    print("\n**********  Configuration done ***********\n")
    p0 = Process(target = main_control_center.configure_threshold, args=(sensor_conn,))
    p0.start()
    threshold = main_conn.recv()
    print("Threshold value = ",threshold)
    p0.join()
    print("\n********** Threshold value is set **********\n")
    p1 = Process(target=sensor_module.raise_alarm, args=(sensor_conn, waterlevel, threshold))
    p1.start()
    alarm = main_conn.recv()
    print("From Raise alarm we get alarm value as : ", alarm)
    print("\n*********************\n")
    if (alarm == 1):
        print("Raise Alarm : High alarm raised")
        alarm_type = 'high'
    elif (alarm == 0):
        print("Raise Alarm : Low alarm raised")
        alarm_type = 'low'
    else:
        print("Error has occured")
        exit(0)
    p1.join()

    print("\n********** Alarm is Raised **********\n")
    p2 = Process(target= sensor_module.update_status, args=(sensor_conn, alarm_type))
    p2.start()
    status = main_conn.recv()
    print("From Update status we get status value as : ", status)
    print("\n*********************\n")
    if (status == 'high'):
        print("Update Status: Status of all sensors updated to high.")
    elif (status == 'low'):
        print("Update Status: Status of all sensors updated to low.")
    p2.join()
    print("\n********** Status of sensors updated **********\n")

    p3 = Process(target=main_control_center.receive_status, args=(sensor_conn, status))
    p3.start()
    value = main_conn.recv()
    print("From Receive status the value to be sent to main control centre is : ",value)
    print("\n*********************\n")
    if (value == 1):
        print("Receive Status: High status of all sensors received by main control centre.")
    elif (value == 0):
        print("Receive Status: Low status of all sensors received by main control centre.")
    p3.join()
    print("\n********** Status of sensors received by main control centre **********\n")

    p4= Process(target= main_control_center.send_instruction, args=(sensor_conn, value))
    p4.start()
    instruction = main_conn.recv()
    print("From Send instruction the instruction sent is : ",instruction)
    print("\n*********************\n")
    if(instruction == 'raise net'):
        print("Send Instruction: Net should be raised.")
    elif(instruction == 'lower net'):
        print("Send Instruction: Net should be lowered.")
    p4.join()
    print("\n********** Instruction is sent by main control centre **********\n")

    p5 = Process(target = sensor_module.control_net, args= (sensor_conn, instruction))
    p5.start()
    control= main_conn.recv()
    print ("From Control net, the control value sent is : ",control)
    print("\n*********************\n")
    if (control == 1):
        print("Control Net: Instruction received and net is raised.")
    elif (control == 0):
        print("Control Net: Instruction received and net is lowered.")
    p5.join()
   
